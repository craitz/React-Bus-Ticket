// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CompraPassagem VIEW renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <PageWithAuth
    cidades={Array []}
    dispatch={[Function]}
    horarios={Array []}
    passagem={
        Object {
            "cpf": Object {
              "isPristine": true,
              "message": "",
              "text": "",
              "validation": null,
            },
            "data": "2017-7-2",
            "dataCompra": "2017-7-2",
            "destino": Object {
              "text": "",
              "val": 1,
            },
            "horario": Object {
              "text": "",
              "val": 0,
            },
            "nome": Object {
              "isPristine": true,
              "message": "",
              "text": "",
              "validation": null,
            },
            "origem": Object {
              "text": "",
              "val": 0,
            },
            "poltrona": Object {
              "isPristine": true,
              "message": "",
              "validation": null,
              "value": "",
            },
          }
    }
    poltronas={Array []}
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
    storeSubscription={
        Subscription {
            "listeners": Object {
              "notify": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": null,
          }
    }
/>,
  "nodes": Array [
    <PageWithAuth
      cidades={Array []}
      dispatch={[Function]}
      horarios={Array []}
      passagem={
            Object {
                  "cpf": Object {
                    "isPristine": true,
                    "message": "",
                    "text": "",
                    "validation": null,
                  },
                  "data": "2017-7-2",
                  "dataCompra": "2017-7-2",
                  "destino": Object {
                    "text": "",
                    "val": 1,
                  },
                  "horario": Object {
                    "text": "",
                    "val": 0,
                  },
                  "nome": Object {
                    "isPristine": true,
                    "message": "",
                    "text": "",
                    "validation": null,
                  },
                  "origem": Object {
                    "text": "",
                    "val": 0,
                  },
                  "poltrona": Object {
                    "isPristine": true,
                    "message": "",
                    "validation": null,
                    "value": "",
                  },
                }
      }
      poltronas={Array []}
      store={
            Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                }
      }
      storeSubscription={
            Subscription {
                  "listeners": Object {
                    "notify": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  },
                  "unsubscribe": null,
                }
      }
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Connect(PageWithAuth)
        store={
                Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      }
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Connect {
        "_reactInternalInstance": [Circular],
        "context": Object {
          "store": undefined,
          "storeSubscription": undefined,
        },
        "notifyNestedSubs": [Function],
        "props": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
        },
        "propsMode": true,
        "refs": Object {},
        "renderCount": 0,
        "selector": Object {
          "error": null,
          "props": Object {
            "cidades": Array [],
            "dispatch": [Function],
            "horarios": Array [],
            "passagem": Object {
              "cpf": Object {
                "isPristine": true,
                "message": "",
                "text": "",
                "validation": null,
              },
              "data": "2017-7-2",
              "dataCompra": "2017-7-2",
              "destino": Object {
                "text": "",
                "val": 1,
              },
              "horario": Object {
                "text": "",
                "val": 0,
              },
              "nome": Object {
                "isPristine": true,
                "message": "",
                "text": "",
                "validation": null,
              },
              "origem": Object {
                "text": "",
                "val": 0,
              },
              "poltrona": Object {
                "isPristine": true,
                "message": "",
                "validation": null,
                "value": "",
              },
            },
            "poltronas": Array [],
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
          },
          "run": [Function],
          "shouldComponentUpdate": false,
        },
        "setWrappedInstance": [Function],
        "state": Object {},
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
        "subscription": Subscription {
          "listeners": Object {
            "notify": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "unsubscribe": null,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
        "version": 1,
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <PageWithAuth
          cidades={Array []}
          dispatch={[Function]}
          horarios={Array []}
          passagem={
                    Object {
                              "cpf": Object {
                                "isPristine": true,
                                "message": "",
                                "text": "",
                                "validation": null,
                              },
                              "data": "2017-7-2",
                              "dataCompra": "2017-7-2",
                              "destino": Object {
                                "text": "",
                                "val": 1,
                              },
                              "horario": Object {
                                "text": "",
                                "val": 0,
                              },
                              "nome": Object {
                                "isPristine": true,
                                "message": "",
                                "text": "",
                                "validation": null,
                              },
                              "origem": Object {
                                "text": "",
                                "val": 0,
                              },
                              "poltrona": Object {
                                "isPristine": true,
                                "message": "",
                                "validation": null,
                                "value": "",
                              },
                            }
          }
          poltronas={Array []}
          store={
                    Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            }
          }
          storeSubscription={
                    Subscription {
                              "listeners": Object {
                                "notify": [Function],
                              },
                              "onStateChange": [Function],
                              "parentSub": undefined,
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                              "unsubscribe": null,
                            }
          }
/>,
        "_debugID": 4,
        "_renderedOutput": <PageWithAuth
          cidades={Array []}
          dispatch={[Function]}
          horarios={Array []}
          passagem={
                    Object {
                              "cpf": Object {
                                "isPristine": true,
                                "message": "",
                                "text": "",
                                "validation": null,
                              },
                              "data": "2017-7-2",
                              "dataCompra": "2017-7-2",
                              "destino": Object {
                                "text": "",
                                "val": 1,
                              },
                              "horario": Object {
                                "text": "",
                                "val": 0,
                              },
                              "nome": Object {
                                "isPristine": true,
                                "message": "",
                                "text": "",
                                "validation": null,
                              },
                              "origem": Object {
                                "text": "",
                                "val": 0,
                              },
                              "poltrona": Object {
                                "isPristine": true,
                                "message": "",
                                "validation": null,
                                "value": "",
                              },
                            }
          }
          poltronas={Array []}
          store={
                    Object {
                              "dispatch": [Function],
                              "getState": [Function],
                              "replaceReducer": [Function],
                              "subscribe": [Function],
                              Symbol(observable): [Function],
                            }
          }
          storeSubscription={
                    Subscription {
                              "listeners": Object {
                                "notify": [Function],
                              },
                              "onStateChange": [Function],
                              "parentSub": undefined,
                              "store": Object {
                                "dispatch": [Function],
                                "getState": [Function],
                                "replaceReducer": [Function],
                                "subscribe": [Function],
                                Symbol(observable): [Function],
                              },
                              "unsubscribe": null,
                            }
          }
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Connect(PageWithAuth)
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
/>,
}
`;

exports[`FormComprar renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <form
    onSubmit={[Function]}
>
    <Row
        bsClass="row"
        className="text-left first"
        componentClass="div"
    >
        <Col
            bsClass="col"
            componentClass="div"
            sm={8}
        >
            <Unknown
                id="nome"
                label="Nome*"
                message=""
                onChange={[Function]}
                type="text"
                validation={null}
                value=""
            />
        </Col>
        <Col
            bsClass="col"
            componentClass="div"
            sm={4}
        >
            <Unknown
                id="cpf"
                label="CPF*"
                mask="111.111.111-11"
                message=""
                onChange={[Function]}
                validation={null}
                value=""
            />
        </Col>
    </Row>
    <Row
        bsClass="row"
        className="text-left"
        componentClass="div"
    >
        <Col
            bsClass="col"
            className="input-col"
            componentClass="div"
            md={6}
        >
            <Unknown
                id="origem"
                label="Origem"
                list={Array []}
                onChange={[Function]}
                value={0}
            />
        </Col>
        <Col
            bsClass="col"
            className="input-col"
            componentClass="div"
            md={6}
        >
            <Unknown
                id="destino"
                label="Destino"
                list={Array []}
                onChange={[Function]}
                value={1}
            />
        </Col>
    </Row>
    <Row
        bsClass="row"
        className="text-left"
        componentClass="div"
    >
        <Col
            bsClass="col"
            className="input-col"
            componentClass="div"
            md={6}
        >
            <DateField
                id="data"
                label="Data"
                onChange={[Function]}
                value="2017-7-2"
            />
        </Col>
        <Col
            bsClass="col"
            className="input-col"
            componentClass="div"
            md={6}
        >
            <Unknown
                emptyMessage="Não há mais saídas neste dia"
                id="horario"
                label="Horário"
                list={Array []}
                onChange={[Function]}
                value={0}
            />
        </Col>
    </Row>
    <Row
        bsClass="row"
        className="text-left"
        componentClass="div"
    >
        <Col
            bsClass="col"
            className="input-col"
            componentClass="div"
            md={12}
        >
            <Unknown
                emptyMessage="Não há mais saídas neste dia"
                id="poltrona"
                label="Poltrona(s)*"
                list={Array []}
                message=""
                onChange={[Function]}
                validation={null}
                value=""
            />
        </Col>
    </Row>
    <hr />
    <div
        className="text-right"
    >
        <Connect(ComponentWithLoading) />
    </div>
</form>,
  "nodes": Array [
    <form
      onSubmit={[Function]}
>
      <Row
            bsClass="row"
            className="text-left first"
            componentClass="div"
      >
            <Col
                  bsClass="col"
                  componentClass="div"
                  sm={8}
            >
                  <Unknown
                        id="nome"
                        label="Nome*"
                        message=""
                        onChange={[Function]}
                        type="text"
                        validation={null}
                        value=""
                  />
            </Col>
            <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
            >
                  <Unknown
                        id="cpf"
                        label="CPF*"
                        mask="111.111.111-11"
                        message=""
                        onChange={[Function]}
                        validation={null}
                        value=""
                  />
            </Col>
      </Row>
      <Row
            bsClass="row"
            className="text-left"
            componentClass="div"
      >
            <Col
                  bsClass="col"
                  className="input-col"
                  componentClass="div"
                  md={6}
            >
                  <Unknown
                        id="origem"
                        label="Origem"
                        list={Array []}
                        onChange={[Function]}
                        value={0}
                  />
            </Col>
            <Col
                  bsClass="col"
                  className="input-col"
                  componentClass="div"
                  md={6}
            >
                  <Unknown
                        id="destino"
                        label="Destino"
                        list={Array []}
                        onChange={[Function]}
                        value={1}
                  />
            </Col>
      </Row>
      <Row
            bsClass="row"
            className="text-left"
            componentClass="div"
      >
            <Col
                  bsClass="col"
                  className="input-col"
                  componentClass="div"
                  md={6}
            >
                  <DateField
                        id="data"
                        label="Data"
                        onChange={[Function]}
                        value="2017-7-2"
                  />
            </Col>
            <Col
                  bsClass="col"
                  className="input-col"
                  componentClass="div"
                  md={6}
            >
                  <Unknown
                        emptyMessage="Não há mais saídas neste dia"
                        id="horario"
                        label="Horário"
                        list={Array []}
                        onChange={[Function]}
                        value={0}
                  />
            </Col>
      </Row>
      <Row
            bsClass="row"
            className="text-left"
            componentClass="div"
      >
            <Col
                  bsClass="col"
                  className="input-col"
                  componentClass="div"
                  md={12}
            >
                  <Unknown
                        emptyMessage="Não há mais saídas neste dia"
                        id="poltrona"
                        label="Poltrona(s)*"
                        list={Array []}
                        message=""
                        onChange={[Function]}
                        validation={null}
                        value=""
                  />
            </Col>
      </Row>
      <hr />
      <div
            className="text-right"
      >
            <Connect(ComponentWithLoading) />
      </div>
</form>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Unknown
        props={
                Object {
                        "fields": Object {
                          "cidades": Array [],
                          "horarios": Array [],
                          "passagem": Object {
                            "cpf": Object {
                              "isPristine": true,
                              "message": "",
                              "text": "",
                              "validation": null,
                            },
                            "data": "2017-7-2",
                            "dataCompra": "2017-7-2",
                            "destino": Object {
                              "text": "",
                              "val": 1,
                            },
                            "horario": Object {
                              "text": "",
                              "val": 0,
                            },
                            "nome": Object {
                              "isPristine": true,
                              "message": "",
                              "text": "",
                              "validation": null,
                            },
                            "origem": Object {
                              "text": "",
                              "val": 0,
                            },
                            "poltrona": Object {
                              "isPristine": true,
                              "message": "",
                              "validation": null,
                              "value": "",
                            },
                          },
                          "poltronas": Array [],
                        },
                        "handlers": Object {
                          "handleChangeCpf": [Function],
                          "handleChangeData": [Function],
                          "handleChangeDestino": [Function],
                          "handleChangeHorario": [Function],
                          "handleChangeNome": [Function],
                          "handleChangeOrigem": [Function],
                          "handleChangePoltrona": [Function],
                          "handleSubmit": [Function],
                        },
                      }
        }
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "props": Object {
            "fields": Object {
              "cidades": Array [],
              "horarios": Array [],
              "passagem": Object {
                "cpf": Object {
                  "isPristine": true,
                  "message": "",
                  "text": "",
                  "validation": null,
                },
                "data": "2017-7-2",
                "dataCompra": "2017-7-2",
                "destino": Object {
                  "text": "",
                  "val": 1,
                },
                "horario": Object {
                  "text": "",
                  "val": 0,
                },
                "nome": Object {
                  "isPristine": true,
                  "message": "",
                  "text": "",
                  "validation": null,
                },
                "origem": Object {
                  "text": "",
                  "val": 0,
                },
                "poltrona": Object {
                  "isPristine": true,
                  "message": "",
                  "validation": null,
                  "value": "",
                },
              },
              "poltronas": Array [],
            },
            "handlers": Object {
              "handleChangeCpf": [Function],
              "handleChangeData": [Function],
              "handleChangeDestino": [Function],
              "handleChangeHorario": [Function],
              "handleChangeNome": [Function],
              "handleChangeOrigem": [Function],
              "handleChangePoltrona": [Function],
              "handleSubmit": [Function],
            },
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <form
          onSubmit={[Function]}
>
          <Row
                    bsClass="row"
                    className="text-left first"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              componentClass="div"
                              sm={8}
                    >
                              <Unknown
                                        id="nome"
                                        label="Nome*"
                                        message=""
                                        onChange={[Function]}
                                        type="text"
                                        validation={null}
                                        value=""
                              />
                    </Col>
                    <Col
                              bsClass="col"
                              componentClass="div"
                              sm={4}
                    >
                              <Unknown
                                        id="cpf"
                                        label="CPF*"
                                        mask="111.111.111-11"
                                        message=""
                                        onChange={[Function]}
                                        validation={null}
                                        value=""
                              />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    className="text-left"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <Unknown
                                        id="origem"
                                        label="Origem"
                                        list={Array []}
                                        onChange={[Function]}
                                        value={0}
                              />
                    </Col>
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <Unknown
                                        id="destino"
                                        label="Destino"
                                        list={Array []}
                                        onChange={[Function]}
                                        value={1}
                              />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    className="text-left"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <DateField
                                        id="data"
                                        label="Data"
                                        onChange={[Function]}
                                        value="2017-7-2"
                              />
                    </Col>
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <Unknown
                                        emptyMessage="Não há mais saídas neste dia"
                                        id="horario"
                                        label="Horário"
                                        list={Array []}
                                        onChange={[Function]}
                                        value={0}
                              />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    className="text-left"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={12}
                    >
                              <Unknown
                                        emptyMessage="Não há mais saídas neste dia"
                                        id="poltrona"
                                        label="Poltrona(s)*"
                                        list={Array []}
                                        message=""
                                        onChange={[Function]}
                                        validation={null}
                                        value=""
                              />
                    </Col>
          </Row>
          <hr />
          <div
                    className="text-right"
          >
                    <Connect(ComponentWithLoading) />
          </div>
</form>,
        "_debugID": 6,
        "_renderedOutput": <form
          onSubmit={[Function]}
>
          <Row
                    bsClass="row"
                    className="text-left first"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              componentClass="div"
                              sm={8}
                    >
                              <Unknown
                                        id="nome"
                                        label="Nome*"
                                        message=""
                                        onChange={[Function]}
                                        type="text"
                                        validation={null}
                                        value=""
                              />
                    </Col>
                    <Col
                              bsClass="col"
                              componentClass="div"
                              sm={4}
                    >
                              <Unknown
                                        id="cpf"
                                        label="CPF*"
                                        mask="111.111.111-11"
                                        message=""
                                        onChange={[Function]}
                                        validation={null}
                                        value=""
                              />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    className="text-left"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <Unknown
                                        id="origem"
                                        label="Origem"
                                        list={Array []}
                                        onChange={[Function]}
                                        value={0}
                              />
                    </Col>
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <Unknown
                                        id="destino"
                                        label="Destino"
                                        list={Array []}
                                        onChange={[Function]}
                                        value={1}
                              />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    className="text-left"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <DateField
                                        id="data"
                                        label="Data"
                                        onChange={[Function]}
                                        value="2017-7-2"
                              />
                    </Col>
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={6}
                    >
                              <Unknown
                                        emptyMessage="Não há mais saídas neste dia"
                                        id="horario"
                                        label="Horário"
                                        list={Array []}
                                        onChange={[Function]}
                                        value={0}
                              />
                    </Col>
          </Row>
          <Row
                    bsClass="row"
                    className="text-left"
                    componentClass="div"
          >
                    <Col
                              bsClass="col"
                              className="input-col"
                              componentClass="div"
                              md={12}
                    >
                              <Unknown
                                        emptyMessage="Não há mais saídas neste dia"
                                        id="poltrona"
                                        label="Poltrona(s)*"
                                        list={Array []}
                                        message=""
                                        onChange={[Function]}
                                        validation={null}
                                        value=""
                              />
                    </Col>
          </Row>
          <hr />
          <div
                    className="text-right"
          >
                    <Connect(ComponentWithLoading) />
          </div>
</form>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Unknown
    props={
        Object {
            "fields": Object {
              "cidades": Array [],
              "horarios": Array [],
              "passagem": Object {
                "cpf": Object {
                  "isPristine": true,
                  "message": "",
                  "text": "",
                  "validation": null,
                },
                "data": "2017-7-2",
                "dataCompra": "2017-7-2",
                "destino": Object {
                  "text": "",
                  "val": 1,
                },
                "horario": Object {
                  "text": "",
                  "val": 0,
                },
                "nome": Object {
                  "isPristine": true,
                  "message": "",
                  "text": "",
                  "validation": null,
                },
                "origem": Object {
                  "text": "",
                  "val": 0,
                },
                "poltrona": Object {
                  "isPristine": true,
                  "message": "",
                  "validation": null,
                  "value": "",
                },
              },
              "poltronas": Array [],
            },
            "handlers": Object {
              "handleChangeCpf": [Function],
              "handleChangeData": [Function],
              "handleChangeDestino": [Function],
              "handleChangeHorario": [Function],
              "handleChangeNome": [Function],
              "handleChangeOrigem": [Function],
              "handleChangePoltrona": [Function],
              "handleSubmit": [Function],
            },
          }
    }
/>,
}
`;
